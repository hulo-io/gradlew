// @hulo-build batch
${@if "%DEBUG%" == "" @echo off}
// ##########################################################################
//
//  Gradle startup script for Windows
//
// ##########################################################################

// Set local scope for the variables with windows NT shell
if runtime.os == "Windows_NT" {
    ${setlocal}
}

// Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
var DEFAULT_JVM_OPTS: str?

var DIRNAME: str = $DIR
if $DIRNAME.is_empty() {
    $DIRNAME = "."
}

var APP_BASE_NAME: str = $FILENAME
var APP_HOME = $DIRNAME

declare var JAVA_HOME: str?

// Find java.exe
if $JAVA_HOME {
    findJavaFromJavaHome()
}

var JAVA_EXE: Command = c"java.exe"

try {
    & $JAVA_EXE `-version` >null $stderr>$stdout
} catch {
    echo """
ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation.
"""
    fail
}

fn findJavaFromJavaHome() {
    $JAVA_HOME=$JAVA_HOME.replace('"', '')
    set JAVA_EXE=%JAVA_HOME%/bin/java.exe

    if ${exist "{{ &JAVA_EXE }}"} {
        init
    }

    echo """
ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation.
"""

    fail
}

fn init() {
// Get command-line arguments, handling Windowz variants
    if runtime.os != "Windows_NT" {
        win9xME_args
    }

    if ${"%@eval[2+2]" == "4"} {
        4NT_args
    }
}

fn win9xME_args() {
    // Slurp the command line arguments.
    var CMD_LINE_ARGS: str[]?
    var _SKIP=2

    if ${"x%~1" == "x"} {
        execute
        return
    }

    ${ set {{ @CMD_LINE_ARGS }}=%* }
    execute
}

fn 4NT_args() {
    // Get arguments from the 4NT Shell from JP Software
    set CMD_LINE_ARGS=%$

    execute()
}

fn execute() {
    try {
        // Setup the command line
        var CLASSPATH = "$APP_HOME\gradle\wrapper\gradle-wrapper.jar"

        // Execute Gradle
        & $JAVA_EXE $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "-Dorg.gradle.appname=%APP_BASE_NAME%" `-classpath` "%CLASSPATH%" "org.gradle.wrapper.GradleWrapperMain" $CMD_LINE_ARGS
    
        // End local scope for the variables with windows NT shell
        mainEnd()
    } catch {
        fail
    }
}

fn fail() {
    declare var GRADLE_EXIT_CONSOLE: str?
    // Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
    // the _cmd.exe /c_ return code!
    if $GRADLE_EXIT_CONSOLE != "" {
        exit 1
    }
    ${exit /b 1}
}

fn mainEnd() {
    if runtime.os == "Windows_NT" {
        ${endlocal}
    }

    omega()
}

fn omega() {}